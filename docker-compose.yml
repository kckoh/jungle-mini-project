version: "3.9"

services:
  web:
    build: .
    container_name: flask_app
    ports:
      - "5001:5000"
    volumes:
      - .:/app
    command: flask run --host=0.0.0.0 --port=5000 --reload
    environment:
      FLASK_HOST: 0.0.0.0
      FLASK_PORT: 5000
      FLASK_DEBUG: "true"
      MONGO_URI: mongodb://root:example@mongo:27017/appdb?authSource=admin
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
    secrets:
      - openai_api_key
    depends_on:
      - mongo
      - redis

  celery:
    build: .
    container_name: celery_worker
    volumes:
      - .:/app
    command: celery -A app.celery worker --loglevel=info

    environment:
      MONGO_URI: mongodb://root:example@mongo:27017/appdb?authSource=admin
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
    secrets:
      - openai_api_key
    depends_on:
      - web
      - redis
      - mongo

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6378:6379"

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: true
      ME_CONFIG_BASICAUTH_USERNAME: mongoexpressuser
      ME_CONFIG_BASICAUTH_PASSWORD: mongoexpresspass
    depends_on:
      - mongo

volumes:
  mongo_data:

secrets:
  openai_api_key:
    file: ./secrets/openai_api_key.txt